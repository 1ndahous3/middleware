#!/usr/bin/env python
#-
# Copyright (c) 2015 iXsystems, Inc.
# All rights reserved.
# This file is a part of TrueNAS
# and may not be copied and/or distributed
# without the express permission of iXsystems.

import argparse
import os
import sys

sys.path.extend([
    '/usr/local/www',
    '/usr/local/www/freenasUI',
])

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'freenasUI.settings')

# Make sure to load all modules
from django.db.models.loading import cache
cache.get_apps()


def main(command, state):
    if command == "enable":
        from freenasUI.failover.models import Failover
        if Failover.objects.all()[0].disabled is True:
            for item in Failover.objects.all():
                item.disabled = False
                item.master = False
                item.save()
            os.system("/usr/sbin/service ix-devd start")
            sys.exit(0)
        else:
            sys.exit(1)
    elif command == "disable":
        from freenasUI.failover.models import Failover
        if Failover.objects.all()[0].disabled is False:
            for item in Failover.objects.all():
                item.disabled = True
                if state == "active":
                    item.master = True
                elif state == "passive":
                    item.master = False
                item.save()
            os.system("/usr/sbin/service ix-devd start")
            sys.exit(0)
        else:
            sys.exit(2)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='HA CLI helper utility.')
    parser.add_argument('command',
                        default="status",
                        nargs='?',
                        help="subcommand: enable disable",
                        choices=['enable', 'disable'],
                        )
    if len(sys.argv) == 3 and sys.argv[1] == "disable":
        parser.add_argument('state',
                            nargs='?',
                            help="active or passive",
                            choices=['active', 'passive'],
                            )
    args = parser.parse_args()
    if hasattr(args, 'state'):
        main(args.command, args.state)
    else:
        main(args.command, None)
