#!/usr/bin/env python
#-
# Copyright (c) 2015 iXsystems, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

import argparse
import os
import sys

sys.path.extend([
    '/usr/local/www',
    '/usr/local/www/freenasUI',
])

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'freenasUI.settings')

# Make sure to load all modules
from django.db.models.loading import cache
cache.get_apps()


def main(command, state):
    if command == "enable":
        from freenasUI.failover.models import Failover
        if Failover.objects.all()[0].disabled is True:
            for item in Failover.objects.all():
                item.disabled = False
                item.active = False
                item.save()
            sys.exit(0)
        else:
            sys.exit(1)
    elif command == "disable":
        from freenasUI.failover.models import Failover
        if Failover.objects.all()[0].disabled is False:
            for item in Failover.objects.all():
                item.disabled = True
                if state == "active":
                    item.active = True
                elif state == "passive":
                    item.active = False
                item.save()
            sys.exit(0)
        else:
            sys.exit(2)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='HA CLI helper utility.')
    parser.add_argument('command',
                        default="status",
                        nargs='?',
                        help="subcommand: enable disable",
                        choices=['enable', 'disable'],
                        )
    if len(sys.argv) == 3 and sys.argv[1] == "disable":
        parser.add_argument('state',
                            nargs='?',
                            help="active or passive",
                            choices=['active', 'passive'],
                            )
    args = parser.parse_args()
    if hasattr(args, 'state'):
        main(args.command, args.state)
    else:
        main(args.command, None)
