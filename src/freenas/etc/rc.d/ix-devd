#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-devd
# REQUIRE: ix-zfs
# BEFORE: devd pf

. /etc/rc.subr

#
# Generate CARP hooks right before mountlate.
#
ix_devd_gen()
{
	local IFS=\|

	local failovers=`${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT COUNT(id) FROM system_failover;"`
	local peerip=`${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT ipaddress FROM system_failover LIMIT 1;"`
	local volumenames=`${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT vol_name FROM storage_volume WHERE vol_fstype = 'ZFS';" | tr "\n" " "`

	if [ ${failovers} -gt 0 ]; then
		cp /conf/base/etc/devd.conf /etc/devd.conf
		cat >> /etc/devd.conf << E*O*F

notify 100 {
   match "system"   "IFNET";
   match "subsystem" "carp.*";
   action "/bin/sh -x /etc/carp-state-change-hook \$subsystem \$type | logger";
};
E*O*F

		# Failover script
		cat > /etc/carp-state-change-hook << E*O*F
#!/bin/sh

SUBSYSTEM=\$1
EVENT=\$2

if [ \${SUBSYSTEM} != "carp0" ]; then
	exit
fi

touch -t \`date -v -1M +%Y%m%d%H%M.%S\` /tmp/heartbeat_barrier

# Has the user indicated we should take over?
if  [ -f /tmp/failover_override ] ; then
    USER_OVERRIDE=1
else
    USER_OVERRIDE=0
fi

# Do we have a force seal?
HAVE_FORCESEAL=\`find /tmp/force_seal -mnewer /tmp/heartbeat_barrier | wc -l\`

if [ \${EVENT} = "LINK_UP" ]; then
    echo "Entering UP on \${SUBSYSTEM}!" | logger

    # Was the other peer UP in the last minute?
    WASCONNECTED=\`find /tmp/heartbeat_state -mnewer /tmp/heartbeat_barrier | wc -l\`

    # If we can still ping the peer, quit immediately
    if [ \${USER_OVERRIDE} -eq 0 ] ; then
        ping -qc 1 -t 1 ${peerip} && exit
    fi

    if [ \${HAVE_FORCESEAL} -eq 1 ]; then
	WASCONNECTED=1
    fi

    # Start fenced.
    # If not forced, start a normal one, otherwise, mark as such.
    RETVAL=Undefined
    if [ \${USER_OVERRIDE} -eq 0 -a \${WASCONNECTED} -eq 0 ] ; then
        /usr/local/bin/python /usr/local/sbin/fenced
        RETVAL=\$?
    else
        /usr/local/bin/python /usr/local/sbin/fenced force
        RETVAL=\$?
    fi

    if [ \${RETVAL} -ne 0 ]; then
	case \${RETVAL} in
	1)
		echo "Can not register keys on disks!" | logger
		ifconfig \${SUBSYSTEM} advskew 201
		;;
	2)
		echo "Remote fenced is running!" | logger
		ifconfig \${SUBSYSTEM} advskew 202
		;;
	3)
		echo "Can not reserve all disks!" | logger
		ifconfig \${SUBSYSTEM} advskew 203
		;;
        *)
		echo "This should never happen: \${RETVAL}" | logger
		ifconfig \${SUBSYSTEM} advskew 204
		;;
	esac
	exit 1
    fi

    # If we reached here, fenced is daemonized and have all drives reserved.
    ifconfig \${SUBSYSTEM} advskew 1

    for volumename in ${volumenames}; do
	/sbin/zpool import -o cachefile=none -R /mnt -f \${volumename}
	/sbin/zpool set cachefile=/data/zfs/zpool.cache \${volumename}
    done

    #mount -uw /
    /etc/rc.d/statd restart
    /usr/sbin/service ix-nfsd quietstart
    /usr/sbin/service mountd restart
    /usr/sbin/service nfsd restart
    /usr/sbin/service ix-istgt quietstart
    /usr/sbin/service istgt forcestop
    /usr/sbin/service istgt restart
#
# There appears to be a small lag if we allow NFS traffic right away.  During
# this time, we fail NFS requests with ESTALE to the remote system.  This
# gives remote clients heartburn, so rather than try to deal with the
# downstream effect of that, instead we take a chill pill for 2 seconds.
#
    sleep 1
    echo "pass quick on \${SUBSYSTEM} keep state" > /etc/pf.conf
    pfctl -f /etc/pf.conf
    echo "\$(date), \$(hostname), assume master" | mail -s "Failover" root

    if  [ -f /tmp/failover_override ] ; then
        rm /tmp/failover_override
    fi
fi

if [ \${EVENT} = "LINK_DOWN" ]; then
    echo "Entering DOWN!" | logger
    ifconfig \${SUBSYSTEM} advskew 100
    echo "set block-policy drop" > /etc/pf.conf.block
    echo "block drop in quick proto tcp from any to any port 860" >> /etc/pf.conf.block
    echo "block drop in quick proto udp from any to any port 860" >> /etc/pf.conf.block
    echo "block drop in quick proto tcp from any to any port 2049" >> /etc/pf.conf.block
    echo "block drop in quick proto udp from any to any port 2049" >> /etc/pf.conf.block
    echo "block drop in quick proto tcp from any to any port 3260" >> /etc/pf.conf.block
    echo "block drop in quick proto udp from any to any port 3260" >> /etc/pf.conf.block
    pfctl -f /etc/pf.conf.block
    /etc/rc.d/statd stop
    /etc/rc.d/watchdogd stop
    pkill -f fenced
    watchdog -t 4
    for volumename in ${volumenames}; do
	echo "Exporting \${volumename}!" | logger
	zpool export -f \${volumename} || (zpool status \${volumename} && sleep 5)
	echo "Exported \${volumename}!" | logger
    done
    watchdog -t 0
    /etc/rc.d/watchdogd start
    echo "\$(date), \$(hostname), assume backup" | mail -s "Failover" root
fi

E*O*F
	else
		/usr/bin/truncate -s 0 /etc/pf.conf
	fi
}

name="ix-devd"
start_cmd='ix_devd_gen'
stop_cmd=':'

load_rc_config $name
run_rc_command "$1"
