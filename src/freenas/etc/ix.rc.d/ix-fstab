#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-fstab
# REQUIRE: earlykld
# BEFORE: fsck

. /etc/rc.subr

#
# Generate fstab right before mountlate.
#
generate_fstab_real()
{
	echo "fdescfs	/dev/fd	fdescfs rw	0 0"
}

create_mirrored_swap()
{
	disks=$(LD_LIBRARY_PATH=/usr/local/lib /usr/local/bin/midclt call notifier.get_boot_pool_disks)
	swapparts=$(for _disk in $disks; do echo ${_disk}p3; done)
	gmirror label -b prefer swap ${swapparts}
	echo "/dev/mirror/swap.eli              none                    swap            sw              0       0" > /data/fstab.swap
}

generate_fstab_swap()
{
	freenas=$(LD_LIBRARY_PATH=/usr/local/lib /usr/local/bin/midclt call system.is_freenas)
	if [ "${freenas}" = "True" ]; then
		local IFS=\|
		local encrypted_swap swap_suffix
		${FREENAS_SQLITE_CMD} ${RO_FREENAS_CONFIG} "SELECT disk_identifier FROM storage_disk WHERE disk_enabled = 1" | \
		while read diskid; do
			devname=$(LD_LIBRARY_PATH=/usr/local/lib /usr/local/bin/midclt -q call notifier.swap_from_diskid "${diskid}")
			if [ -c "/dev/${devname}" ]; then
				if [ ! -L /dev/dumpdev ]; then
					/sbin/dumpon /dev/${devname} && ln -sf /dev/${devname} /dev/dumpdev
				fi
				# For FreeNAS we need to check for crash in every swap
				if savecore -C /dev/${devname} > /dev/null; then
					savecore ${savecore_flags} ${dumpdir} /dev/${devname}
					/usr/sbin/crashinfo -d ${dumpdir}
				fi
			fi
		done
	else
		if [ ! -c /dev/mirror/swap ]; then
			create_mirrored_swap
		fi
		if [ -e /data/fstab.swap ]; then
			cat /data/fstab.swap
		fi
		if [ ! -L /dev/dumpdev ]; then
			devname=$(awk '{print $1}' /data/fstab.swap | sed -e 's/\.eli$//')
			/sbin/dumpon ${devname} && ln -sf ${devname} /dev/dumpdev
		fi
		if savecore -C /dev/dumpdev > /dev/null; then
			savecore ${savecore_flags} ${dumpdir} /dev/dumpdev
			/usr/sbin/crashinfo -d ${dumpdir}
		fi
	fi
}

generate_fstab()
{
	freenas=$(LD_LIBRARY_PATH=/usr/local/lib /usr/local/bin/midclt call system.is_freenas)
	local _doumount=0
	RO_FREENAS_CONFIG=$(ro_sqlite ${name} 2> /tmp/${name}.fail && rm /tmp/${name}.fail)
	trap 'rm -f ${RO_FREENAS_CONFIG}' EXIT

	if [ `stat -f "%d:%i" /conf/base/etc/fstab` = `stat -f "%d:%i" /etc/fstab` ]; then	
		# Hard link.  Let's remove /etc/fstab and copy /conf/base/etc/fstab to it
		rm /etc/fstab
	fi
	cp /conf/base/etc/fstab /etc/fstab
	generate_fstab_real >> /etc/fstab
	mount -uw /
	if [ "${freenas}" = "True" ]; then
		generate_fstab_swap
	else
		generate_fstab_swap >> /etc/fstab
	fi
}

name="ix-fstab"
start_cmd='generate_fstab'
stop_cmd=':'

load_rc_config $name
run_rc_command "$1"
